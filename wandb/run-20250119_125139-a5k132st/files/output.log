/home/archer/.local/lib/python3.10/site-packages/gym/envs/registration.py:555: UserWarning: [33mWARN: The environment SuperMarioBros-1-1-v0 is out of date. You should consider upgrading to version `v3`.[0m
  logger.warn(
No model found at mario_dqn.pth; starting from scratch.
Training:   0%|                                                                                | 0/5000 [00:00<?, ?it/s]/home/archer/.local/lib/python3.10/site-packages/gym/utils/passive_env_checker.py:195: UserWarning: [33mWARN: The result returned by `env.reset()` was not a tuple of the form `(obs, info)`, where `obs` is a observation and `info` is a dictionary containing additional information. Actual type: `<class 'numpy.ndarray'>`[0m
  logger.warn(
/home/archer/.local/lib/python3.10/site-packages/gym/utils/passive_env_checker.py:272: UserWarning: [33mWARN: No render modes was declared in the environment (env.metadata['render_modes'] is None or not defined), you may have trouble when calling `.render()`.[0m
  logger.warn(
/home/archer/.local/lib/python3.10/site-packages/gym/utils/passive_env_checker.py:219: DeprecationWarning: [33mWARN: Core environment is written in old step API which returns one bool instead of two. It is recommended to rewrite the environment with new step API. [0m
  logger.deprecation(
Episode 1 | Reward: 139.00 | Eps: 0.995
Training:   0%|                                                                     | 8/5000 [09:02<94:03:02, 67.82s/it]
Episode 2 | Reward: 267.00 | Eps: 0.990
Episode 3 | Reward: 139.00 | Eps: 0.985
Episode 4 | Reward: 139.00 | Eps: 0.980
Episode 5 | Reward: 139.00 | Eps: 0.975
Episode 6 | Reward: 267.00 | Eps: 0.970
Episode 7 | Reward: 139.00 | Eps: 0.966
Episode 8 | Reward: 329.00 | Eps: 0.961
Traceback (most recent call last):
  File "/home/archer/code/super_mario_learning/train.py", line 355, in <module>
    run_training(num_episodes=5000, render=True, load_model="mario_dqn.pth")
  File "/home/archer/code/super_mario_learning/train.py", line 311, in run_training
    agent.experience_replay()
  File "/home/archer/code/super_mario_learning/train.py", line 226, in experience_replay
    self.copy_model()
  File "/home/archer/code/super_mario_learning/train.py", line 179, in copy_model
    self.target_net.load_state_dict(self.local_net.state_dict())
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2219, in state_dict
    module.state_dict(
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2219, in state_dict
    module.state_dict(
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2216, in state_dict
    self._save_to_state_dict(destination, prefix, keep_vars)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2118, in _save_to_state_dict
    destination[prefix + name] = param if keep_vars else param.detach()
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/archer/code/super_mario_learning/train.py", line 355, in <module>
    run_training(num_episodes=5000, render=True, load_model="mario_dqn.pth")
  File "/home/archer/code/super_mario_learning/train.py", line 311, in run_training
    agent.experience_replay()
  File "/home/archer/code/super_mario_learning/train.py", line 226, in experience_replay
    self.copy_model()
  File "/home/archer/code/super_mario_learning/train.py", line 179, in copy_model
    self.target_net.load_state_dict(self.local_net.state_dict())
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2219, in state_dict
    module.state_dict(
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2219, in state_dict
    module.state_dict(
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2216, in state_dict
    self._save_to_state_dict(destination, prefix, keep_vars)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2118, in _save_to_state_dict
    destination[prefix + name] = param if keep_vars else param.detach()
KeyboardInterrupt
