/home/archer/.local/lib/python3.10/site-packages/gym/envs/registration.py:555: UserWarning: [33mWARN: The environment SuperMarioBros-1-1-v0 is out of date. You should consider upgrading to version `v3`.[0m
  logger.warn(
Loading model from mario_dqn.pth ...
/home/archer/code/super_mario_learning/train.py:278: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  agent.local_net.load_state_dict(torch.load(load_model, map_location=device))
Model loaded successfully. Training will resume from this checkpoint.
Training:   0%|                                                                               | 0/50000 [00:00<?, ?it/s]/home/archer/.local/lib/python3.10/site-packages/gym/utils/passive_env_checker.py:195: UserWarning: [33mWARN: The result returned by `env.reset()` was not a tuple of the form `(obs, info)`, where `obs` is a observation and `info` is a dictionary containing additional information. Actual type: `<class 'numpy.ndarray'>`[0m
  logger.warn(
/home/archer/.local/lib/python3.10/site-packages/gym/utils/passive_env_checker.py:272: UserWarning: [33mWARN: No render modes was declared in the environment (env.metadata['render_modes'] is None or not defined), you may have trouble when calling `.render()`.[0m
  logger.warn(
/home/archer/.local/lib/python3.10/site-packages/gym/utils/passive_env_checker.py:219: DeprecationWarning: [33mWARN: Core environment is written in old step API which returns one bool instead of two. It is recommended to rewrite the environment with new step API. [0m
  logger.deprecation(
Episode 1 | Reward: 233.00 | Eps: 0.990
Training:   0%|                                                                   | 5/50000 [02:36<433:55:13, 31.25s/it]
Episode 2 | Reward: 238.00 | Eps: 0.980
Episode 3 | Reward: 139.00 | Eps: 0.970
Episode 4 | Reward: 139.00 | Eps: 0.961
Episode 5 | Reward: 247.00 | Eps: 0.951
Traceback (most recent call last):
  File "/home/archer/code/super_mario_learning/train.py", line 355, in <module>
    run_training(num_episodes=50000, render=True, load_model="mario_dqn.pth")
  File "/home/archer/code/super_mario_learning/train.py", line 311, in run_training
    agent.experience_replay()
  File "/home/archer/code/super_mario_learning/train.py", line 239, in experience_replay
    loss = self.loss_fn(current, target)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/loss.py", line 1040, in forward
    return F.smooth_l1_loss(input, target, reduction=self.reduction, beta=self.beta)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/functional.py", line 3669, in smooth_l1_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/functional.py", line 76, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
  File "/home/archer/.local/lib/python3.10/site-packages/torch/_VF.py", line 27, in __getattr__
    def __getattr__(self, name: str) -> object:
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/archer/code/super_mario_learning/train.py", line 355, in <module>
    run_training(num_episodes=50000, render=True, load_model="mario_dqn.pth")
  File "/home/archer/code/super_mario_learning/train.py", line 311, in run_training
    agent.experience_replay()
  File "/home/archer/code/super_mario_learning/train.py", line 239, in experience_replay
    loss = self.loss_fn(current, target)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/modules/loss.py", line 1040, in forward
    return F.smooth_l1_loss(input, target, reduction=self.reduction, beta=self.beta)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/nn/functional.py", line 3669, in smooth_l1_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/home/archer/.local/lib/python3.10/site-packages/torch/functional.py", line 76, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
  File "/home/archer/.local/lib/python3.10/site-packages/torch/_VF.py", line 27, in __getattr__
    def __getattr__(self, name: str) -> object:
KeyboardInterrupt
